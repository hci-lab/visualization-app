// Generated by CoffeeScript 1.10.0
(function() {
  var smooth,
    slice = [].slice;

  smooth = (function() {
    var density, kernal, linear, log, mean, median, mode, names, normal, spline, sum;

    function smooth() {}

    names = [5, 6, 1, 3, 1, 1, 9, 1];

    sum = function() {
      var count, input_array, j, len, total;
      input_array = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      total = 0;
      for (j = 0, len = input_array.length; j < len; j++) {
        count = input_array[j];
        total += count;
      }
      return total;
    };

    mean = function() {
      var input_array;
      input_array = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return (sum.apply(null, input_array)) / input_array.length;
    };

    median = function() {
      var input_array, posetion, result, size;
      input_array = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      size = input_array.length;
      posetion = 0;
      result = 0;
      if (size % 2 !== 0) {
        posetion = (size - 1) / 2;
        result = input_array[posetion];
      } else {
        posetion = size / 2;
        result = (input_array[posetion] + input_array[posetion - 1]) / 2;
      }
      return result;
    };

    mode = function() {
      var counter, i, input_array, j, max, ref, result;
      input_array = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      counter = 1;
      max = 0;
      result = input_array[0];
      input_array.sort();
      for (i = j = 1, ref = input_array.length - 1; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
        if (input_array[i] === input_array[i + 1]) {
          counter++;
          if (counter > max) {
            max = counter;
            result = input_array[i];
          } else {
            counter = 1;
          }
        }
      }
      return result;
    };

    linear = function() {};

    log = function() {};

    spline = function() {};

    density = function() {};

    normal = function() {};

    kernal = function() {};

    return smooth;

  })();

}).call(this);

//# sourceMappingURL=smooth.js.map
